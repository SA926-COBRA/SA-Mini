name: On Push To Main
on:
  push:
    branches: ["main"]
jobs:
  check-code-quality:
    name: Check Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - run: npm ci
      - run: npm test
      - run: npm run lint
  check-docker-container:
    name: Check Docker Container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: docker-compose -f docker-compose.production.yml up -d
      - name: Check if main page is available
        run: until curl -s -o /dev/null -w "%{http_code}" localhost:7860 | grep 200; do sleep 1; done
      - run: docker-compose -f docker-compose.production.yml down
  build-and-push-image:
    name: Publish Docker image to GitHub Packages
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@70fccc794acd729b2b22dd6a326895f286447728
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@f7b4ed12385588c3f9bc252f0a2b520d83b52d48
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@2a53c6ccda456d31fb62eedc658aae06e238b7bd
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  sync-to-hf:
    name: Sync to HuggingFace Spaces
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: JacobLinCool/huggingface-sync@v1
        with:
          github: ${{ secrets.GITHUB_TOKEN }}
          user: ${{ vars.HF_SPACE_OWNER }}
          space: ${{ vars.HF_SPACE_NAME }}
          token: ${{ secrets.HF_TOKEN }}
          configuration: "hf-space-config.yml"
